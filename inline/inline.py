from aiogram.utils.keyboard import InlineKeyboardBuilder
from db.sqlite_db import read_data, read_data_delete

def inkb():
    inkb = InlineKeyboardBuilder()
    inkb.button(text='–†—É—Å—Å–∫–∏–π', callback_data='RUS')
    inkb.button(text='English', callback_data='ENG')

    inkb.adjust(2)
    return inkb.as_markup()

def mainru():
    mainru = InlineKeyboardBuilder()
    mainru.button(text='–ú–∞–≥–∞–∑–∏–ΩüéÆ', callback_data='–ú–∞–≥–∞–∑–∏–Ω')
    mainru.button(text='–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—èüìù', callback_data='–ß–∞–í–æ')
    mainru.button(text='–û—Ç–∑—ã–≤—ãüßæ', callback_data='–û—Ç–∑—ã–≤—ã')
    mainru.button(text='–ü–æ–º–æ—â—åüë®‚Äçüîß', callback_data='–ü–æ–º–æ—â—å')
    mainru.button(text='English', callback_data='ENG')

    mainru.adjust(2, 2, 1)
    return mainru.as_markup()

def mainen():
    mainen = InlineKeyboardBuilder()
    mainen.button(text='StoreüéÆ', callback_data='Store')
    mainen.button(text='Instructionüìù', callback_data='FAQ')
    mainen.button(text='Reviewsüßæ', callback_data='Reviews')
    mainen.button(text='Supportüë®‚Äçüîß', callback_data='Support')
    mainen.button(text='–†—É—Å—Å–∫–∏–π', callback_data='RUS')

    mainen.adjust(2, 2, 1)
    return mainen.as_markup()

def store_ru():
    store_ru = InlineKeyboardBuilder()
    store_ru.button(text='FortniteüíªüéÆ', callback_data='–§–æ—Ä—Ç–Ω–∞–π—Ç')
    store_ru.button(text='–ü–æ–¥–ø–∏—Å–∫–∏üí≥', callback_data='–ü–æ–¥–ø–∏—Å–∫–∏')
    store_ru.button(text='–ù–∞–∑–∞–¥', callback_data='RUS')

    store_ru.adjust(2, 1)
    return store_ru.as_markup()

def store_en():
    store_en = InlineKeyboardBuilder()
    store_en.button(text='FortniteüíªüéÆ', callback_data='Fortnite')
    store_en.button(text='Subscriptionsüí≥', callback_data='Subs')
    store_en.button(text='Back', callback_data='ENG')

    store_en.adjust(2, 1)
    return store_en.as_markup()

def fortnite_ru():
    fortnite_ru = InlineKeyboardBuilder()
    fortnite_ru.button(text='–í-–ë–∞–∫—Å—ãüí≤', callback_data='–í–±–∞–∫—Å—ã')
    fortnite_ru.button(text='–ù–∞–±–æ—Ä—ãüí≤üï∫', callback_data='–ù–∞–±–æ—Ä—ã')
    fortnite_ru.button(text='–ù–∞–∑–∞–¥', callback_data='–ú–∞–≥–∞–∑–∏–Ω')

    fortnite_ru.adjust(2, 1)
    return fortnite_ru.as_markup()

def fortnite_en():
    fortnite_en = InlineKeyboardBuilder()
    fortnite_en.button(text='V-Bucksüí≤', callback_data='Vbucks')
    fortnite_en.button(text='Bundlesüí≤üï∫', callback_data='Bundles')
    fortnite_en.button(text='Back', callback_data='Store')

    fortnite_en.adjust(2, 1)
    return fortnite_en.as_markup()

def subscriptions_ru():
    subscriptions_ru = InlineKeyboardBuilder()
    subscriptions_ru.button(text='Spotifyüü¢', callback_data='–°–ø–æ—Ç–∏—Ñ–∞–π')
    subscriptions_ru.button(text='Xbox', callback_data='–±–æ–∫—Å')
    subscriptions_ru.button(text='Playstation', callback_data='–ø—Å')
    subscriptions_ru.button(text='–ù–∞–∑–∞–¥', callback_data='–ú–∞–≥–∞–∑–∏–Ω')

    subscriptions_ru.adjust(1, 2)
    return subscriptions_ru.as_markup() 

def subscriptions_en():
    subscriptions_en = InlineKeyboardBuilder()
    subscriptions_en.button(text='Spotifyüü¢', callback_data='Spotify')
    subscriptions_en.button(text='Xbox', callback_data='xbox')
    subscriptions_en.button(text='Playstation', callback_data='ps')
    subscriptions_en.button(text='Back', callback_data='Store')

    subscriptions_en.adjust(1, 2)
    return subscriptions_en.as_markup()

def spotify_ru():
    spotify_ru = InlineKeyboardBuilder()
    spotify_ru.button(text='Spotify Premium 1 –º–µ—Å—è—Üüü¢', callback_data='–°–ø–æ—Ç–∏—Ñ–∞–π1')
    spotify_ru.button(text='Spotify Premium 3 –º–µ—Å—è—Ü–∞üü¢', callback_data='–°–ø–æ—Ç–∏—Ñ–∞–π3')
    spotify_ru.button(text='Spotify Premium 6 –º–µ—Å—è—Ü–µ–≤üü¢', callback_data='–°–ø–æ—Ç–∏—Ñ–∞–π6')
    spotify_ru.button(text='Spotify Premium 12 –º–µ—Å—è—Ü–µ–≤üü¢', callback_data='–°–ø–æ—Ç–∏—Ñ–∞–π12')
    spotify_ru.button(text='–ù–∞–∑–∞–¥', callback_data='–ü–æ–¥–ø–∏—Å–∫–∏')

    spotify_ru.adjust(2, 2)
    return spotify_ru.as_markup()

def spotify_en():
    spotify_en = InlineKeyboardBuilder()
    spotify_en.button(text='Spotify Premium 1 monthüü¢', callback_data='Spotify1')
    spotify_en.button(text='Spotify Premium 3 monthsüü¢', callback_data='Spotify3')
    spotify_en.button(text='Spotify Premium 6 monthsüü¢', callback_data='Spotify6')
    spotify_en.button(text='Spotify Premium 12 monthsüü¢', callback_data='Spotify12')
    spotify_en.button(text='Back', callback_data='Subs')

    spotify_en.adjust(2, 2, 1)
    return spotify_en.as_markup()

def xboxru():
    xboxru = InlineKeyboardBuilder()
    xboxru.button(text='–ü–ö Game Pass', callback_data='–ø–∫–≥–ø')
    xboxru.button(text='–ö–æ–Ω—Å–æ–ª—å–Ω—ã–π Game Pass', callback_data='–∫–≥–ø')
    xboxru.button(text='Ultimate Game Pass', callback_data='—É–≥–ø')
    xboxru.button(text='–ù–∞–∑–∞–¥', callback_data='–ü–æ–¥–ø–∏—Å–∫–∏')

    xboxru.adjust(2, 1, 1)
    return xboxru.as_markup()

def xboxen():
    xboxen = InlineKeyboardBuilder()
    xboxen.button(text='PC Game Pass', callback_data='pcgp')
    xboxen.button(text='Console Game Pass', callback_data='cgp')
    xboxen.button(text='Ultimate Game Pass', callback_data='ugp')
    xboxen.button(text='Back', callback_data='Subs')

    xboxen.adjust(2, 1, 1)
    return xboxen.as_markup()

def table_selector(available_tables):
    table_selector = InlineKeyboardBuilder()

    for table_name in available_tables:
        table_selector.button(text=table_name, callback_data=f"select_table:{table_name}")

    table_selector.adjust(4, 4, 4)
    return table_selector.as_markup()

def gen_selection(table_name):
    gen_selection = InlineKeyboardBuilder()
    
    results = read_data(table_name)
    for product_name, product_price in results:
        gen_selection.button(text=f"{product_name} | {product_price}‚ÇΩ", callback_data=f"product:{product_name}")
    gen_selection.button(text='–í –º–µ–Ω—é', callback_data='RUS')

    gen_selection.adjust(1, 1, 1, 1, 1, 1, 1, 1)
    return gen_selection.as_markup()

def gen_selection_english(table_name):
    gen_selection_english = InlineKeyboardBuilder()
    
    results = read_data(table_name)
    for product_name, product_price in results:
        gen_selection.button(text=f"{product_name} | {product_price}$", callback_data=f"product:{product_name}")
    gen_selection_english.button(text='Main Menu', callback_data='ENG')

    gen_selection_english.adjust(1, 1, 1, 1, 1, 1, 1, 1)
    return gen_selection_english.as_markup()

def gen_selection_for_deletion(table_name):
    gen_selection_for_deletion = InlineKeyboardBuilder()
    
    results = read_data_delete(table_name)
    for product_tuple in results:
        product_name = product_tuple[0]
        gen_selection_for_deletion.button(text=f"{product_name}", callback_data=f"product:{product_name}")

    gen_selection_for_deletion.adjust(1, 1, 1, 1, 1, 1, 1, 1)
    return gen_selection_for_deletion.as_markup()

def yes_no():
    yes_no = InlineKeyboardBuilder()
    yes_no.button(text='–î–∞', callback_data='Yes')
    yes_no.button(text='–ù–µ—Ç', callback_data='No')

    yes_no.adjust(2)
    return yes_no.as_markup()